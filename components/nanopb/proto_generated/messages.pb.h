/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SensorType {
    SensorType_MIST_SENSOR = 0,
    SensorType_AIR_SENSOR = 1,
    SensorType_LIGHT_SENSOR = 2
} SensorType;

typedef enum _MessageType {
    MessageType_SENSOR_QUERY = 0,
    MessageType_COMMAND = 1
} MessageType;

/* Struct definitions */
typedef struct _MistSensor {
    SensorType sensor_type;
    int64_t timestamp;
    float temperature;
    float humidity;
    pb_byte_t mac_addr[6];
} MistSensor;

typedef struct _AirSensor {
    SensorType sensor_type;
    int64_t timestamp;
    float temperature;
    float humidity;
    float pressure;
    pb_byte_t mac_addr[6];
} AirSensor;

typedef struct _LightSensor {
    SensorType sensor_type;
    int64_t timestamp;
    uint64_t intensity;
    pb_byte_t mac_addr[6];
} LightSensor;

typedef struct _SensorQuery {
    MessageType message_type;
    SensorType sensor_type;
    pb_size_t which_body;
    union _SensorQuery_body {
        MistSensor mist_sensor;
        AirSensor air_sensor;
        LightSensor light_sensor;
    } body;
} SensorQuery;

typedef struct _TimeSync {
    bool has_timestamp;
    int64_t timestamp;
} TimeSync;

typedef struct _SleepCycle {
    int64_t sleep_time;
} SleepCycle;

typedef struct _Command {
    MessageType message_type;
    int64_t id;
    pb_size_t which_body;
    union _Command_body {
        TimeSync time_sync;
        SleepCycle sleep_cycle;
    } body;
} Command;

typedef struct _ACK {
    int64_t id;
} ACK;

typedef struct _NACK {
    int64_t id;
} NACK;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _SensorType_MIN SensorType_MIST_SENSOR
#define _SensorType_MAX SensorType_LIGHT_SENSOR
#define _SensorType_ARRAYSIZE ((SensorType)(SensorType_LIGHT_SENSOR+1))

#define _MessageType_MIN MessageType_SENSOR_QUERY
#define _MessageType_MAX MessageType_COMMAND
#define _MessageType_ARRAYSIZE ((MessageType)(MessageType_COMMAND+1))

#define MistSensor_sensor_type_ENUMTYPE SensorType

#define AirSensor_sensor_type_ENUMTYPE SensorType

#define LightSensor_sensor_type_ENUMTYPE SensorType

#define SensorQuery_message_type_ENUMTYPE MessageType
#define SensorQuery_sensor_type_ENUMTYPE SensorType

#define Command_message_type_ENUMTYPE MessageType






/* Initializer values for message structs */
#define MistSensor_init_default                  {SensorType_MIST_SENSOR, 0ll, 0, 0, {0}}
#define AirSensor_init_default                   {SensorType_AIR_SENSOR, 0ll, 0, 0, 0, {0}}
#define LightSensor_init_default                 {SensorType_LIGHT_SENSOR, 0ll, 0, {0}}
#define SensorQuery_init_default                 {_MessageType_MIN, _SensorType_MIN, 0, {MistSensor_init_default}}
#define Command_init_default                     {_MessageType_MIN, 0, 0, {TimeSync_init_default}}
#define TimeSync_init_default                    {false, 0}
#define SleepCycle_init_default                  {0}
#define ACK_init_default                         {0}
#define NACK_init_default                        {0}
#define MistSensor_init_zero                     {_SensorType_MIN, 0, 0, 0, {0}}
#define AirSensor_init_zero                      {_SensorType_MIN, 0, 0, 0, 0, {0}}
#define LightSensor_init_zero                    {_SensorType_MIN, 0, 0, {0}}
#define SensorQuery_init_zero                    {_MessageType_MIN, _SensorType_MIN, 0, {MistSensor_init_zero}}
#define Command_init_zero                        {_MessageType_MIN, 0, 0, {TimeSync_init_zero}}
#define TimeSync_init_zero                       {false, 0}
#define SleepCycle_init_zero                     {0}
#define ACK_init_zero                            {0}
#define NACK_init_zero                           {0}

/* Field tags (for use in manual encoding/decoding) */
#define MistSensor_sensor_type_tag               1
#define MistSensor_timestamp_tag                 2
#define MistSensor_temperature_tag               3
#define MistSensor_humidity_tag                  4
#define MistSensor_mac_addr_tag                  5
#define AirSensor_sensor_type_tag                1
#define AirSensor_timestamp_tag                  2
#define AirSensor_temperature_tag                3
#define AirSensor_humidity_tag                   4
#define AirSensor_pressure_tag                   5
#define AirSensor_mac_addr_tag                   6
#define LightSensor_sensor_type_tag              1
#define LightSensor_timestamp_tag                2
#define LightSensor_intensity_tag                3
#define LightSensor_mac_addr_tag                 4
#define SensorQuery_message_type_tag             1
#define SensorQuery_sensor_type_tag              2
#define SensorQuery_mist_sensor_tag              3
#define SensorQuery_air_sensor_tag               4
#define SensorQuery_light_sensor_tag             5
#define TimeSync_timestamp_tag                   2
#define SleepCycle_sleep_time_tag                2
#define Command_message_type_tag                 1
#define Command_id_tag                           2
#define Command_time_sync_tag                    3
#define Command_sleep_cycle_tag                  4
#define ACK_id_tag                               1
#define NACK_id_tag                              1

/* Struct field encoding specification for nanopb */
#define MistSensor_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    sensor_type,       1) \
X(a, STATIC,   REQUIRED, INT64,    timestamp,         2) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       3) \
X(a, STATIC,   REQUIRED, FLOAT,    humidity,          4) \
X(a, STATIC,   REQUIRED, FIXED_LENGTH_BYTES, mac_addr,          5)
#define MistSensor_CALLBACK NULL
#define MistSensor_DEFAULT (const pb_byte_t*)"\x10\x00\x00"

#define AirSensor_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    sensor_type,       1) \
X(a, STATIC,   REQUIRED, INT64,    timestamp,         2) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       3) \
X(a, STATIC,   REQUIRED, FLOAT,    humidity,          4) \
X(a, STATIC,   REQUIRED, FLOAT,    pressure,          5) \
X(a, STATIC,   REQUIRED, FIXED_LENGTH_BYTES, mac_addr,          6)
#define AirSensor_CALLBACK NULL
#define AirSensor_DEFAULT (const pb_byte_t*)"\x08\x01\x10\x00\x00"

#define LightSensor_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    sensor_type,       1) \
X(a, STATIC,   REQUIRED, INT64,    timestamp,         2) \
X(a, STATIC,   REQUIRED, UINT64,   intensity,         3) \
X(a, STATIC,   REQUIRED, FIXED_LENGTH_BYTES, mac_addr,          4)
#define LightSensor_CALLBACK NULL
#define LightSensor_DEFAULT (const pb_byte_t*)"\x08\x02\x10\x00\x00"

#define SensorQuery_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    message_type,      1) \
X(a, STATIC,   REQUIRED, UENUM,    sensor_type,       2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (body,mist_sensor,body.mist_sensor),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (body,air_sensor,body.air_sensor),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (body,light_sensor,body.light_sensor),   5)
#define SensorQuery_CALLBACK NULL
#define SensorQuery_DEFAULT NULL
#define SensorQuery_body_mist_sensor_MSGTYPE MistSensor
#define SensorQuery_body_air_sensor_MSGTYPE AirSensor
#define SensorQuery_body_light_sensor_MSGTYPE LightSensor

#define Command_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    message_type,      1) \
X(a, STATIC,   REQUIRED, INT64,    id,                2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (body,time_sync,body.time_sync),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (body,sleep_cycle,body.sleep_cycle),   4)
#define Command_CALLBACK NULL
#define Command_DEFAULT NULL
#define Command_body_time_sync_MSGTYPE TimeSync
#define Command_body_sleep_cycle_MSGTYPE SleepCycle

#define TimeSync_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT64,    timestamp,         2)
#define TimeSync_CALLBACK NULL
#define TimeSync_DEFAULT NULL

#define SleepCycle_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    sleep_time,        2)
#define SleepCycle_CALLBACK NULL
#define SleepCycle_DEFAULT NULL

#define ACK_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    id,                1)
#define ACK_CALLBACK NULL
#define ACK_DEFAULT NULL

#define NACK_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    id,                1)
#define NACK_CALLBACK NULL
#define NACK_DEFAULT NULL

extern const pb_msgdesc_t MistSensor_msg;
extern const pb_msgdesc_t AirSensor_msg;
extern const pb_msgdesc_t LightSensor_msg;
extern const pb_msgdesc_t SensorQuery_msg;
extern const pb_msgdesc_t Command_msg;
extern const pb_msgdesc_t TimeSync_msg;
extern const pb_msgdesc_t SleepCycle_msg;
extern const pb_msgdesc_t ACK_msg;
extern const pb_msgdesc_t NACK_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MistSensor_fields &MistSensor_msg
#define AirSensor_fields &AirSensor_msg
#define LightSensor_fields &LightSensor_msg
#define SensorQuery_fields &SensorQuery_msg
#define Command_fields &Command_msg
#define TimeSync_fields &TimeSync_msg
#define SleepCycle_fields &SleepCycle_msg
#define ACK_fields &ACK_msg
#define NACK_fields &NACK_msg

/* Maximum encoded size of messages (where known) */
#define ACK_size                                 11
#define AirSensor_size                           36
#define Command_size                             26
#define LightSensor_size                         32
#define MESSAGES_PB_H_MAX_SIZE                   SensorQuery_size
#define MistSensor_size                          31
#define NACK_size                                11
#define SensorQuery_size                         42
#define SleepCycle_size                          11
#define TimeSync_size                            11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
